{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA,iEAAe,mBAAmB;;;;;;;;;;;;;;;;ACLlC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrBoC;AACU;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;;AAEA;;AAEA,iEAAe,QAAQ;;;;;;;;;;;;;;;;ACtBW;AACY;;AAE9C,sBAAsB,iDAAQ;AAC9B;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,sDAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,sDAAmB;;AAE5C;AACA;AACA;AACA,wDAAwD,UAAU;AAClE;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iEAAe,OAAO;;;;;;UCtCtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNiE;AACvB;AACD;;AAEzC;AACA,YAAY,gDAAgD,EAAE,qDAAO;;;AAGrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,gBAAgB,yDAAQ;AACxB,YAAY,qEAAmB,CAAC,qDAAO;AACvC;AACA,KAAK;;;AAGL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAO;AAC/B;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;;AAEL,CAAC,E","sources":["webpack://list-editor/./src/js/modules/collector.js","webpack://list-editor/./src/js/modules/control.js","webpack://list-editor/./src/js/modules/list-app.js","webpack://list-editor/./src/js/modules/sub-list.js","webpack://list-editor/webpack/bootstrap","webpack://list-editor/webpack/runtime/define property getters","webpack://list-editor/webpack/runtime/hasOwnProperty shorthand","webpack://list-editor/webpack/runtime/make namespace object","webpack://list-editor/./src/js/script.js"],"sourcesContent":["\nfunction collectorСollection(selector) {\n    const element = document.querySelectorAll(selector);\n    return element;\n}\n\nexport default collectorСollection;","\nconst dqs = (text, index) => {\n    if (index === 'all') {\n        const element = document.querySelectorAll(text);\n        return element;\n    } else {\n        const element = document.querySelector(text);\n        return element;\n    }\n}\n\nconst control = {\n    parent: dqs('.list'),\n    mainButton: dqs('[data-add]'),\n    mainInput: dqs('input'),\n    ul: dqs('ul'),\n    deleteList: dqs('.list-item__button-remove', 'all'),\n}\n\nfunction resetMainInputValue(data) {\n    data.mainInput.value = '';\n}\n\n\nexport {control, resetMainInputValue};","import { control } from \"./control\";\nimport collectorСollection from \"./collector\";\n\nclass ListItem {\n    constructor(text, parent, control) {\n        this.text = text;\n        this.parent = parent;\n        this.control = control;\n    }\n\n    listElement() {\n        const li = document.createElement('li');\n        li.classList.add('list-item');\n        li.innerHTML = `\n                    <span class=\"list-item__text\">${this.text}</span>\n                    <button class=\"list-item__button-add-sublist\">add sublist</button>\n                    <button class=\"list-item__button-remove\" data-list-remove>remove</button>`;\n        this.parent.append(li)\n    }\n\n}\n\nexport default ListItem;","import ListItem from \"./list-app\";\nimport collectorСollection from \"./collector\";\n\nclass SubList extends ListItem{\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n\n    subList(i) {\n        const elements = collectorСollection('.list-item');\n\n        const ul = document.createElement('ul');\n        ul.classList.add('sub-list-item');\n        ul.innerHTML = `\n                        <input class=\"add-sub-input\" type=\"text\">\n                        <button class=\"add-sub-list-btn\" data-add-sublist>add</button>\n                        <button class=\"closet\">closet</button> \n                        `\n        elements[i].append(ul)\n        \n    }\n\n    subListElement(i) {\n        const elements = collectorСollection('.list-item');\n\n        const li = document.createElement('li');\n        li.classList.add('list-item');\n        li.innerHTML = `\n                        <span class=\"list-item__text\">${this.text}</span>\n                         <button class=\"list-item__button-add-sublist\">add sublist</button>\n                        <button class=\"list-item__button-remove\" data-list-remove>remove</button>`;\n        elements[i].append(li);\n    }\n\n  \n}\n\nexport default SubList;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { control, resetMainInputValue } from \"./modules/control\";\nimport ListItem from \"./modules/list-app\";\nimport SubList from \"./modules/sub-list\";\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    const { mainInput, ul, mainButton, deleteList, parent } = control;\n\n\n    function collectorСollection(selector) {\n        const element = document.querySelectorAll(selector);\n        return element;\n    }\n\n    function removeList(index) {\n        const elements = collectorСollection('.list-item');\n        elements.forEach((item, i) => {\n            if (i == index) {\n                item.remove()\n            }\n        })\n    }\n\n    function closet(index) {\n        const elements = collectorСollection('.sub-list-item');\n        elements.forEach((item, i) => {\n            if (i == index) {\n                item.remove();\n            }\n        })\n    }\n\n    mainButton.addEventListener('click', () => {\n        if (mainInput.value != null && mainInput.value != '') {\n            new ListItem(mainInput.value, ul).listElement();\n            resetMainInputValue(control);\n        }\n    })\n\n\n    parent.addEventListener('click', (event) => {\n        const target = event.target;\n\n        // delete element\n\n        if (target && target.classList.contains('list-item__button-remove')) {\n            const elements = collectorСollection('.list-item__button-remove');\n            elements.forEach((item, i) => {\n                if (target == item) {\n                    removeList(i);\n                }\n            })\n        }\n\n        // add sublist control\n        \n        if (target && target.classList.contains('list-item__button-add-sublist')) {\n            const elements = collectorСollection('.list-item__button-add-sublist');\n            elements.forEach((item, i) => {\n                if (target == item) {\n                    new SubList(null, elements[i]).subList(i);\n                }\n            });\n        }\n\n        if (target && target.classList.contains('closet')) {\n            const elements = collectorСollection('.closet');\n            elements.forEach((item, i) => {\n                if (target == item) {\n                    closet(i);\n                }\n            })\n        }\n        // add sublist element\n\n        // if (target && target.classList.contains('add-sub-list-btn')) {\n        //     const inputs = collectorСollection('.add-sub-input');\n        //     const elements = collectorСollection('.add-sub-list-btn');\n        //     elements.forEach((item, i) => {\n        //         if (target == item) {\n        //             new SubList(inputs[i].value, elements[i]).subListElement(i);\n        //         }\n        //     });\n        // }\n        \n        \n        \n    });\n\n});"],"names":[],"sourceRoot":""}